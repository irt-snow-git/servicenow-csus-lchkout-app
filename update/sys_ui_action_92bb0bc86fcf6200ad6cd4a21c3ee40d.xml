<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>renew</action_name>
        <active>true</active>
        <client>false</client>
        <comments>Extends the Return Time of a Checkout Ticket based on the Default Checkout Time associated with the Device's device type.</comments>
        <condition>current.state=='Checked Out'</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <name>Renew</name>
        <onclick>clientRenew()</onclick>
        <order>100</order>
        <script><![CDATA[var isAdmin = gs.hasRole('x_casus_laptop.admin');

var isRenewable = current.renewal_count < current.device_name.device_type.max_renewal;

if (isAdmin || isRenewable){
	var now = new GlideDateTime();
	var returnTime = new GlideDateTime(current.return_time);
	
	var isBeforeReturnTime = now.compareTo(returnTime) != 1;
	
	if (isAdmin || isBeforeReturnTime){
		var newReturnTime = new GlideDateTime();
		var defaultTime = new GlideDateTime(current.device_name.device_type.default_time);
		
		newReturnTime.add(defaultTime.getNumericValue());
		
		var checkoutFormUtils = new CheckoutFormUtils();
		
		newReturnTime.setValue(
			checkoutFormUtils.renewWithSchedule(
				current.device_name.device_type.depot.schedule, now, newReturnTime, isAdmin));
		
		if(newReturnTime != ''){
			current.return_time = newReturnTime;
			current.renewal_count += 1;
			current.update();
			gs.addInfoMessage(current.device_name.device_type.device_type + " " + current.device_name.device_id + " Renewed Until " + current.return_time.getDisplayValue());
		}else{
			gs.error("Laptop Checkout: Renew UI Action: Expected return time, received: " + newReturnTime);
			gs.addErrorMessage("An error occurred. Please contact your ServiceNow administrator.");
			action.setRedirectURL(current);
		}
	}else{
		gs.addErrorMessage('Renewal is not allowed past return time.');
		action.setRedirectURL(current);
	}
}else{
	gs.addErrorMessage("Device has reached max renewal count.");
	action.setRedirectURL(current);
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>msn73</sys_created_by>
        <sys_created_on>2016-11-08 03:50:33</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>92bb0bc86fcf6200ad6cd4a21c3ee40d</sys_id>
        <sys_mod_count>157</sys_mod_count>
        <sys_name>Renew</sys_name>
        <sys_overrides/>
        <sys_package display_value="Laptop Checkout" source="x_casus_laptop">ba205f426f7a2a00ad6cd4a21c3ee477</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Laptop Checkout">ba205f426f7a2a00ad6cd4a21c3ee477</sys_scope>
        <sys_update_name>sys_ui_action_92bb0bc86fcf6200ad6cd4a21c3ee40d</sys_update_name>
        <sys_updated_by>hedge</sys_updated_by>
        <sys_updated_on>2017-12-21 19:55:28</sys_updated_on>
        <table>x_casus_laptop_checkout_table</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
